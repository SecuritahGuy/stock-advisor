def test_find_candidates(self):
    from app.screener.discover import Screener
    screener = Screener()
    candidates = screener.find_candidates()
    self.assertIsNotNone(candidates)

def test_find_candidates_with_custom_price(self):
    from app.screener.discover import Screener
    screener = Screener()
    candidates = screener.find_candidates(price_range=(10, 50))
    self.assertGreater(len(candidates), 0)

def test_get_candidates(self):
    from app.screener.discover import Screener
    screener = Screener()
    result = screener.get_candidates_from_parquet('data/candidates.parquet')
    self.assertEqual(len(result), 2)  # Limited to top 2

def test_get_candidates_empty(self):
    from app.screener.discover import Screener
    screener = Screener()
    result = screener.get_candidates_from_parquet('data/empty_candidates.parquet')
    self.assertEqual(len(result), 0)  # Expecting no candidates

def test_screener_initialization(self):
    from app.screener.discover import Screener
    screener = Screener()
    self.assertIsInstance(screener, Screener)